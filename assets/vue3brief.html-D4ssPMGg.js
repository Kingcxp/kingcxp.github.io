import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as p,o as e}from"./app-BBnF5_qW.js";const t={};function o(c,s){return e(),a("div",null,s[0]||(s[0]=[p(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p><em>你知道吗？</em><br><a href="https://cn.vuejs.org/guide/quick-start.html" target="_blank" rel="noopener noreferrer">Vue.js 的官方文档</a>实际上也非常不错！你可以通过这个链接学习如何使用 node.js 包管理器创建 Vue 项目！</p></div><p>Vue 是一款非常火爆的前端项目框架，它基于标准HTML、CSS和JavaScript构建，并提供了一套声明式的、组件化的编程模型，可以高效地开发用户界面。无论是简单还是复杂的界面，Vue都可以胜任。是目前生产环境中使用最广泛的JavaScript框架之一。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在这里以 <code>JavaScript</code> 为例，<code>TypeScript</code> 的使用方式与 <code>JavaScript</code> 基本一致，只是它的静态语法属性更强，你需要为每个变量标注变量类型，但你可以通过使用 <code>any</code> 类型来跳过这个过程~~（所以这个语言也被称为 <code>AnyScript</code>）~~。</p></div><p>它的项目结构大致如下：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">.</span></span>
<span class="line">├── index.html</span>
<span class="line">├── jsconfig.json</span>
<span class="line">├── package.json</span>
<span class="line">├── package-lock.json</span>
<span class="line">├── public/</span>
<span class="line">│   └── favicon.ico</span>
<span class="line">├── src/</span>
<span class="line">│   ├── App.vue</span>
<span class="line">│   ├── assets/</span>
<span class="line">│   │   ├── base.css</span>
<span class="line">│   │   └── main.css</span>
<span class="line">│   ├── components/</span>
<span class="line">│   ├── main.js</span>
<span class="line">│   ├── router/</span>
<span class="line">│   │   └── index.js</span>
<span class="line">│   └── views/</span>
<span class="line">└── vite.config.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们来简单地过一下这个目录结构，只挑比较重要的部分说：</p><ul><li><code>vite.config.js</code>: 这是 Vite 的配置文件，用于配置 Vite 的行为，比如端口、代理等，在这里我们不接触这个部分。</li><li><code>package.json</code>、<code>package-lock.json</code>: 这是 Node.js 的包管理器 <code>npm</code> 的配置文件，用于管理项目的依赖和项目的启动命令，通过观察这个文件就能看懂，这里不重复叙述了。</li><li><code>index.html</code>: 这就是你认为的那个 <code>主页</code>，仔细观察其中的代码就会发现：</li></ul><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token comment">&lt;!-- index.html --&gt;</span></span>
<span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/favicon.ico<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>NYPT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/src/main.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>body</code> 元素中，你会找到一个 <code>id=&quot;app&quot;</code> 的 <code>div</code> 标签，这个时候我们将它与 <code>main.js</code> 关联起来：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// main.js</span></span>
<span class="line"><span class="token comment">// 这里默认你创建项目时选择了使用 vue-router</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&#39;./assets/main.css&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，它通过 <code>createApp</code> 创建了一个 Vue 实例，并且使用 <code>app.use</code> 方法注册了 <code>router</code>，最后通过 <code>app.mount</code> 方法将 Vue 实例挂载到 <code>id=&quot;app&quot;</code> 的 <code>div</code> 标签上，也就是我们之前提到的那个。</p><p>至此，我们已经将 <code>Vue</code> 的 <code>app</code> 实例挂载到页面上了，但是，现在页面上还是空空如也，我们应当怎样编写页面呢？</p><p>我们首先先需要了解 <code>.vue</code> 文件的结构，理论上，一个空的 <code>.vue</code> 文件不是完全空的，它应当长这样：</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code class="language-vue"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你会发现，其中分为 <code>script</code>、<code>template</code>、<code>style</code> 三个部分，它们分别对应了 Vue 中的三个核心概念：组件、模板、样式。</p><ul><li><code>script</code>: 这是 Vue 组件的逻辑部分，你可以在这里编写组件的逻辑代码，比如数据、方法、生命周期钩子等。如果你在 <code>script</code> 之后加上了 <code>setup</code>，这证明你想要使用 <a href="https://cn.vuejs.org/guide/introduction.html#composition-api" target="_blank" rel="noopener noreferrer">组合式 API</a>，否则，证明你想要使用 <a href="https://cn.vuejs.org/guide/introduction.html#options-api" target="_blank" rel="noopener noreferrer">选项式 API</a>，我们软工 II 的实例项目就是使用的<code>组合式 API</code>，它的逻辑性更好，更灵活，也更易读，一般也建议使用组合式 API。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>每个 <code>*.vue</code> 文件最多可以包含一个 <code>&lt;script setup&gt;</code>。(不包括一般的 <code>&lt;script&gt;</code>)</p></div><ul><li><code>template</code>: 这是 Vue 组件的模板部分，你可以在这里编写组件的 HTML 代码，比如标签、属性、事件等。在 Vue 中，模板是声明式的，也就是说，你只需要关注你想要展示的内容，而无需关注如何展示，Vue 会自动为你处理。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>每个 <code>*.vue</code> 文件最多可以包含一个<em>顶层</em> <code>&lt;template&gt;</code> 块。</p></div><ul><li><code>style</code>: 这是 Vue 组件的样式部分，你可以在这里编写组件的 CSS 代码，比如选择器、属性、伪类等。在 Vue 中，如果你在 <code>style</code> 之后使用了 <code>scoped</code>，这说明你定义的样式是作用域的，也就是说，你编写的样式只会作用到当前文件中的模板设计，而不会影响到其他组件，否则，<code>style</code> 块将会对全局生效。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>每个 <code>*.vue</code> 文件可以包含多个 <code>&lt;style&gt;</code> 标签。</p><p>一般来说，组件内部建议都使用 <code>&lt;style scoped&gt;</code>，如果你需要设计全局生效的 <code>CSS</code>，你可以在 <code>src/assets</code> 中修改 <code>base.css</code> 或者 <code>main.css</code>。</p></div><p>了解了 <code>.vue</code> 文件的结构之后，我们再来看项目的主体内容：</p><ul><li><code>App.vue</code>: 这是项目的根组件，之前 <code>main.js</code> 中的 <code>createApp</code> 你会发现，其中塞的就是这个文件，它的模板部分将会被渲染到 <code>index.html</code> 中的 <code>id=&quot;app&quot;</code> 的 <code>div</code> 标签中：</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// App.vue</span></span>
<span class="line"><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> RouterView <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>RouterView <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般来说，你只需要这样编写你的 App.vue 就好了，因为 <code>vue-router</code> 会自动帮你处理路由，在不同的路由下，<code>&lt;RouterView /&gt;</code> 元素将会自动为你渲染不同的内容。</p><ul><li><p><code>views/</code> 和 <code>components/</code> 文件夹：这里就是编写你的页面和组件的地方，字面意思来看，<code>views/</code> 文件夹下存放的是页面，<code>components/</code> 文件夹下存放的是组件，你可以以你自己的理解来存放。不过一般来说，<code>views/</code> 文件夹下存放的是某一个路由的整体设计，<code>components/</code> 文件夹下存放的是一些可以在多个页面或者同一页面上多次复用的组件。</p></li><li><p><code>src/router/index.js</code>: 你需要在这里配置你的 <code>vue-router</code> 路由，它将自动根据你浏览器中输入的地址路由来选择展示的内容，例如我们模板项目中的 <code>router</code> 配置：</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>createRouter<span class="token punctuation">,</span> createWebHashHistory<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/user/Login.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;用户登录&#39;</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/user/Register.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;用户注册&#39;</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Home.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Dashboard&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/user/Dashboard.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;个人信息&#39;</span><span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;404&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/NotFound.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;404&#39;</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/:catchAll(.*)&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> _<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token literal-property property">token</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token literal-property property">role</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        document<span class="token punctuation">.</span>title <span class="token operator">=</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>permission<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>role<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/404&#39;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/register&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token punctuation">{</span>router<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，你会发现，配置了每个路由所对应的 <code>views</code> 文件夹中的页面，并将剩余未定义的路由都重定向到 <code>404</code> 页面，并且，在路由跳转之前添加了拦截器，会检查当前用户是否已经登录，如果已经登录，则根据用户的权限来决定是否可以访问该页面，否则，重定向到登录页面。</p><p>这里还有高手进阶用法，其中 <code>/home</code> 页面为它指定了 <code>children</code></p><p>如果打开 <code>/home</code> 对应页面的 <code>.vue</code> 文件，你就会发现原因：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// src/views/Home.vue</span></span>
<span class="line"><span class="token operator">&lt;</span>script setup lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">&quot;../components/Header.vue&quot;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>Header<span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>router<span class="token operator">-</span>view <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里首先放上了 <code>Header</code> 子组件，并在之后添加 <code>router-view</code>，表明先渲染一个 <code>Header</code>，再渲染子路由的具体内容，这样编写，如果你访问 <code>/dashboard</code>，你会发现，原先的 <code>dashboard</code> 设计中并未包含 <code>Header</code>，但是，因为 <code>Home.vue</code> 中已经包含 <code>Header</code>，所以，<code>Header</code> 会被渲染到 <code>dashboard</code> 的页面中。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>meta</code> 字段指定了页面的元数据，你可以在其中添加一些你需要的字段，例如 <code>title</code>，<code>permission</code> 等，在 <code>router.beforeEach</code> 中，你可以根据这些字段来处理跳转逻辑。</p></div><p>这样，你应该对 <code>Vue</code> 项目结构和每个部分的作用有一定的具体了解了，接下来，你将学习一些有关页面元素设计的基础内容，以及网络请求的一些必需知识，以方便你之后的作业开发。</p>`,34)]))}const r=n(t,[["render",o]]),u=JSON.parse(`{"path":"/posts/Vue3-%E7%BD%91%E7%BB%9C%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/vue3brief.html","title":"1. Vue3 简介","lang":"zh-CN","frontmatter":{"title":"1. Vue3 简介","date":"2025-03-04T00:00:00.000Z","icon":"person-chalkboard","order":2,"category":["Vue3 网络前端开发"],"tag":["Vue3","HTML","CSS","JavaScript","TypeScript"],"description":"提示 你知道吗？ Vue.js 的官方文档实际上也非常不错！你可以通过这个链接学习如何使用 node.js 包管理器创建 Vue 项目！ Vue 是一款非常火爆的前端项目框架，它基于标准HTML、CSS和JavaScript构建，并提供了一套声明式的、组件化的编程模型，可以高效地开发用户界面。无论是简单还是复杂的界面，Vue都可以胜任。是目前生产环境中...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. Vue3 简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-04T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-28T11:31:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kingcq\\",\\"url\\":\\"https://github.com/Kingcxp\\"}]}"],["meta",{"property":"og:url","content":"https://kingcxp.github.io/posts/Vue3-%E7%BD%91%E7%BB%9C%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/vue3brief.html"}],["meta",{"property":"og:site_name","content":"Kingcq's Blog"}],["meta",{"property":"og:title","content":"1. Vue3 简介"}],["meta",{"property":"og:description","content":"提示 你知道吗？ Vue.js 的官方文档实际上也非常不错！你可以通过这个链接学习如何使用 node.js 包管理器创建 Vue 项目！ Vue 是一款非常火爆的前端项目框架，它基于标准HTML、CSS和JavaScript构建，并提供了一套声明式的、组件化的编程模型，可以高效地开发用户界面。无论是简单还是复杂的界面，Vue都可以胜任。是目前生产环境中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-28T11:31:29.000Z"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:tag","content":"HTML"}],["meta",{"property":"article:tag","content":"Vue3"}],["meta",{"property":"article:published_time","content":"2025-03-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-28T11:31:29.000Z"}]]},"git":{"createdTime":1741067194000,"updatedTime":1753702289000,"contributors":[{"name":"Kingcq","username":"Kingcq","email":"404291187@qq.com","commits":2,"url":"https://github.com/Kingcq"}]},"readingTime":{"minutes":6.52,"words":1957},"filePathRelative":"posts/Vue3-网络前端开发/vue3brief.md","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p><em>你知道吗？</em><br>\\n<a href=\\"https://cn.vuejs.org/guide/quick-start.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Vue.js 的官方文档</a>实际上也非常不错！你可以通过这个链接学习如何使用 node.js 包管理器创建 Vue 项目！</p>\\n</div>\\n<p>Vue 是一款非常火爆的前端项目框架，它基于标准HTML、CSS和JavaScript构建，并提供了一套声明式的、组件化的编程模型，可以高效地开发用户界面。无论是简单还是复杂的界面，Vue都可以胜任。是目前生产环境中使用最广泛的JavaScript框架之一。</p>","autoDesc":true}`);export{r as comp,u as data};
