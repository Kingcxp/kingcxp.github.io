import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as t,M as o,o as a}from"./app-B6yu4Jx0.js";const r="/assets/5-1-xIkL75Y2.jpg",c="/assets/5-2-tHCLQUxn.jpg",p="/assets/5-3-CeygbHX2.jpg",l={};function s(g,e){return a(),n("div",null,e[0]||(e[0]=[t("p",null,[o("在游戏每帧的更新过程中对所有不同类型的实体，还有背景、GUI等进行更新是在是太麻烦了，而且，除了之前写好的SceneNode之外，你还需要东西来分类存储他们。"),t("br"),o(" 那太麻烦了，不好用，又没有更简单的？")],-1),t("p",null,"我们引入指令系统，将指令传入整棵树，让它自行选取符合条件的实体进行更新。每帧我们根据用户的输入情况以及游戏的整体情况决定需要进行哪些更新，然后往里面扔就完事了！",-1),t("figure",null,[t("img",{src:r,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),t("figure",null,[t("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),t("figure",null,[t("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),t("p",null,"这几样东西一摆，不说也应该知道干啥了吧？",-1)]))}const u=i(l,[["render",s],["__file","5.html.vue"]]),f=JSON.parse(`{"path":"/posts/C__-SFML-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/5.html","title":"5. 指令系统，不算高效但是更方便的游戏更新策略","lang":"zh-CN","frontmatter":{"title":"5. 指令系统，不算高效但是更方便的游戏更新策略","date":"2024-03-17T00:00:00.000Z","icon":"comment-medical","order":6,"category":["C++ SFML"],"tag":["C++","SFML"],"author":"Kingcq","description":"在游戏每帧的更新过程中对所有不同类型的实体，还有背景、GUI等进行更新是在是太麻烦了，而且，除了之前写好的SceneNode之外，你还需要东西来分类存储他们。 那太麻烦了，不好用，又没有更简单的？ 我们引入指令系统，将指令传入整棵树，让它自行选取符合条件的实体进行更新。每帧我们根据用户的输入情况以及游戏的整体情况决定需要进行哪些更新，然后往里面扔就完事...","head":[["meta",{"property":"og:url","content":"https://kingcxp.github.io/posts/C__-SFML-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/5.html"}],["meta",{"property":"og:site_name","content":"Kingcq's Blog"}],["meta",{"property":"og:title","content":"5. 指令系统，不算高效但是更方便的游戏更新策略"}],["meta",{"property":"og:description","content":"在游戏每帧的更新过程中对所有不同类型的实体，还有背景、GUI等进行更新是在是太麻烦了，而且，除了之前写好的SceneNode之外，你还需要东西来分类存储他们。 那太麻烦了，不好用，又没有更简单的？ 我们引入指令系统，将指令传入整棵树，让它自行选取符合条件的实体进行更新。每帧我们根据用户的输入情况以及游戏的整体情况决定需要进行哪些更新，然后往里面扔就完事..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-05T07:41:30.000Z"}],["meta",{"property":"article:author","content":"Kingcq"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:tag","content":"SFML"}],["meta",{"property":"article:published_time","content":"2024-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-05T07:41:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. 指令系统，不算高效但是更方便的游戏更新策略\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-05T07:41:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kingcq\\"}]}"]]},"headers":[],"git":{"createdTime":1738740544000,"updatedTime":1738741290000,"contributors":[{"name":"Kingcq","username":"Kingcq","email":"404291187@qq.com","commits":2,"url":"https://github.com/Kingcq"}]},"readingTime":{"minutes":0.72,"words":216},"filePathRelative":"posts/C++-SFML-游戏开发/5.md","localizedDate":"2024年3月17日","excerpt":"<p>在游戏每帧的更新过程中对所有不同类型的实体，还有背景、GUI等进行更新是在是太麻烦了，而且，除了之前写好的SceneNode之外，你还需要东西来分类存储他们。<br>\\n那太麻烦了，不好用，又没有更简单的？</p>\\n<p>我们引入指令系统，将指令传入整棵树，让它自行选取符合条件的实体进行更新。每帧我们根据用户的输入情况以及游戏的整体情况决定需要进行哪些更新，然后往里面扔就完事了！</p>\\n<figure><figcaption></figcaption></figure>\\n<figure><figcaption></figcaption></figure>\\n<figure><figcaption></figcaption></figure>","autoDesc":true}`);export{u as comp,f as data};
