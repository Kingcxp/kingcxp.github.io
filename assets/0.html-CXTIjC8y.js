import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as a,o as t}from"./app-BGVLH4Lj.js";const p={};function o(c,n){return t(),s("div",null,n[0]||(n[0]=[a(`<p>各位好啊！这里是某 CQ！</p><p>我不是佬，只是一个想为大家着想的菜菜OIer</p><p>所以我们在这里正式推出CPL dotOJ补完计划！</p><p>很多同学反映，我们的OJ题目与上课内容脱节，上课内容听不懂。</p><p>怎么办呢？某 CQ 来帮你！</p><p>在某 CQ 仍然会当天课程的情况下，我们每周的C语言课后会尽快在洛谷挑选一些适合大家练习的题目，供大家为本周的OJ困难挑战做准备练习，同时也希望大家能获得对程序设计更深的理解。</p><p>某 CQ 也会在题单的介绍中，为大家提供一些也许不是特别好的讲解。来帮助大家理解当周的课程。</p><p>某 CQ 的其它课程成绩并不是很好，希望各位佬们能够帮助某 CQ！OTZ</p><p>现在我们所在的是 <code>0-intro</code> 题单！</p><p>在这周的课程中，我们学会了 C 语言的基本设计结构，也学到了基本的interger类型变量的定义、输入和输出。</p><p>大体格式如下：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这一部分是需要同学们记住的</p><p>我们现在还无法理解 <code>int main()</code> 和 <code>return 0</code> 的具体意思，所以我们暂且先把这个放在一边，只需要知道一个程序不能少了上面代码的任何一个东西</p><p>而 <code>#include &lt;stdio.h&gt;</code> 是指使编译器包含(include) stdio.h 这一 C 语言库的指令</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>stdio.h 这个库来头可不小，他的std指的是标准(standard)，而io指的是输入输出(in, out)，连起来读就是标准输入输出库，.h 是它的文件名后缀，由此可知，我们在程序中输入输出都离不开它。</p></div><p>在课程中，我们也学到了基本的输入输出指令</p><p>输入：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 <code>%d</code> 表示我们想要读入一个整型(int)变量，之后跟上&amp;号和我们想要存入这个数据的变量名。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>&amp;</code> 号表示这个变量的地址，这个很好理解啊，如果你直接写变量名，那 <code>scanf</code> 了解到的是这个变量的值，而要想写入数据，<code>scanf</code> 必须要知道这个变量的地址在哪里，它才好将读入的值存过去，所以，非常重要的一点是读入一定不能少了 <code>&amp;</code></p></div><p>输出：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>printf</code> 指令的内部需要给出一个用 <code>&quot;&quot;</code> 括起来的字符串和若干变量，当我们在 <code>&quot;&quot;</code> 里面填入东西，<code>printf</code> 就会输出对应的东西，而当我们写入 <code>%d</code> 的时候，就相当于告诉 <code>printf</code>，这里需要输出一个变量，而之后的给出的变量必须与按照前面字符串中出现的 <code>%d</code> 一一对应的给出，顺序也不能错。</p></div><p>第零章我们只学了整型变量 <code>int</code></p><p>而且我们并不需要知道这是什么意思</p><p>我们只需要知道，我们只要写出一行：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token keyword">int</span> a<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们就能定义一个名为 <code>a</code> 的整型变量，而且我们能用上面的输入输出来对这个变量进行操作</p><p>在学完 <code>int</code> 之后，我们又学了赋值语句和基本的四则运算</p><p>赋值语句我们用的是 <code>=</code> 这个传奇的符号，它的能力是将它右侧的值赋给左侧的变量，于是我们便学会了对变量进行基本的处理：\\</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> sum <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这一章的内容貌似确实就该这么多，知道了这一点点东西，没想到我们已经能编写出一个能干点事情的程序了。那么，快来试试吧！</p><p>某 CQ 祝大家在之后的题单中能够快乐地提升自己。</p><p>题单链接：</p><p><a href="https://www.luogu.com.cn/training/242331" target="_blank" rel="noopener noreferrer">南哪2022-0-intro - 题单 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)</a></p>`,36)]))}const l=e(p,[["render",o]]),d=JSON.parse(`{"path":"/posts/CPL-DotOJ-%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92/0.html","title":"南哪 2022-0-intro","lang":"zh-CN","frontmatter":{"title":"南哪 2022-0-intro","date":"2022-11-06T00:00:00.000Z","icon":"face-grin-beam-sweat","order":2,"category":["CPL DotOJ 补完计划"],"tag":["CPL","DotOJ"],"author":"Kingcq","description":"各位好啊！这里是某 CQ！ 我不是佬，只是一个想为大家着想的菜菜OIer 所以我们在这里正式推出CPL dotOJ补完计划！ 很多同学反映，我们的OJ题目与上课内容脱节，上课内容听不懂。 怎么办呢？某 CQ 来帮你！ 在某 CQ 仍然会当天课程的情况下，我们每周的C语言课后会尽快在洛谷挑选一些适合大家练习的题目，供大家为本周的OJ困难挑战做准备练习，同...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"南哪 2022-0-intro\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-28T11:31:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kingcq\\"}]}"],["meta",{"property":"og:url","content":"https://kingcxp.github.io/posts/CPL-DotOJ-%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92/0.html"}],["meta",{"property":"og:site_name","content":"Kingcq's Blog"}],["meta",{"property":"og:title","content":"南哪 2022-0-intro"}],["meta",{"property":"og:description","content":"各位好啊！这里是某 CQ！ 我不是佬，只是一个想为大家着想的菜菜OIer 所以我们在这里正式推出CPL dotOJ补完计划！ 很多同学反映，我们的OJ题目与上课内容脱节，上课内容听不懂。 怎么办呢？某 CQ 来帮你！ 在某 CQ 仍然会当天课程的情况下，我们每周的C语言课后会尽快在洛谷挑选一些适合大家练习的题目，供大家为本周的OJ困难挑战做准备练习，同..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-28T11:31:29.000Z"}],["meta",{"property":"article:author","content":"Kingcq"}],["meta",{"property":"article:tag","content":"DotOJ"}],["meta",{"property":"article:tag","content":"CPL"}],["meta",{"property":"article:published_time","content":"2022-11-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-28T11:31:29.000Z"}]]},"git":{"createdTime":1738740544000,"updatedTime":1753702289000,"contributors":[{"name":"Kingcq","username":"Kingcq","email":"404291187@qq.com","commits":3,"url":"https://github.com/Kingcq"}]},"readingTime":{"minutes":3.43,"words":1028},"filePathRelative":"posts/CPL-DotOJ-补完计划/0.md","excerpt":"<p>各位好啊！这里是某 CQ！</p>\\n<p>我不是佬，只是一个想为大家着想的菜菜OIer</p>\\n<p>所以我们在这里正式推出CPL dotOJ补完计划！</p>\\n<p>很多同学反映，我们的OJ题目与上课内容脱节，上课内容听不懂。</p>\\n<p>怎么办呢？某 CQ 来帮你！</p>\\n<p>在某 CQ 仍然会当天课程的情况下，我们每周的C语言课后会尽快在洛谷挑选一些适合大家练习的题目，供大家为本周的OJ困难挑战做准备练习，同时也希望大家能获得对程序设计更深的理解。</p>\\n<p>某 CQ 也会在题单的介绍中，为大家提供一些也许不是特别好的讲解。来帮助大家理解当周的课程。</p>\\n<p>某 CQ 的其它课程成绩并不是很好，希望各位佬们能够帮助某 CQ！OTZ</p>","autoDesc":true}`);export{l as comp,d as data};
